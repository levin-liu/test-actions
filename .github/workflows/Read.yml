# This is a basic workflow to help you get started with Actions

name: Read

# Controls when the workflow will run
on:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    branches:
      - test
      - stg
      - main
    inputs:
      functionType:
        description: 'function type'
        required: true
        default: 'trigger'
        type: choice
        options:
          - trigger
          - notifier
          - recorder
      triggerFunctionName:
        description: 'trigger name'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - abandoned_offer
          - abandonment
          - applepie
          - coffee_upsell
          - coffeecoupon
          - dessert
          - full_onboarding
          - lto_upsell
          - occasion
          - onboarding
          - popular_dessert
      notifierFunctionName:
        description: 'notifier name'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - full_onboarding
      recorderFunctionName:
        description: 'recorder name'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - begin_checkout
          - checkout_go_to_confirm_order
          - choose_store
          - first_open
          - map_select_store
          - purchase
          - search_results_select_store
          - use_counter_coupon
          - use_mop_coupon


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  read:
    runs-on: ubuntu-latest
#    if: ${{GITHUB_REF#refs/heads/}}  == 'main'
    outputs:
      branchName:  ${GITHUB_REF#refs/heads/}
      functionType: ${{ inputs.functionType }}
      triggerFunctionName: ${{ inputs.triggerFunctionName }}
      notifierFunctionName: ${{ inputs.notifierFunctionName }}
      recorderFunctionName: ${{ inputs.recorderFunctionName }}
      functionDir: ${{ inputs.functionType }}
      envName: ${{ env.EnvName }}

    steps:
      - name: Extract param
        run: |
          echo "dir=" >> $GITHUB_OUTPUT
        id: extract_param
      - name: Read branch name
        shell: bash
        run: |
          echo continue build
          echo 'The branch name is ' ${GITHUB_REF#refs/heads/}

      - name: Check Test param
        if: ${{ github.ref == 'refs/heads/test' }}
        run: |
          echo "EnvName=release-test" >> $GITHUB_ENV

      - name: Check Stg param
        if: ${{ github.ref == 'refs/heads/stg' }}
        run: |
          echo "EnvName=release-stg" >> $GITHUB_ENV

      - name: Check Main param
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          echo "EnvName=main" >> $GITHUB_ENV 

  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: ${{needs.read.outputs.EnvName}}
    needs: [read]
    if: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/test'  }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs customer-defined-script
      - name: Echo param
        run: |
          echo 'This branch is ' ${{needs.read.outputs.branchName}}
          echo 'FunctionType is ' ${{needs.read.outputs.functionType}}
          echo 'TriggerFunctionName is ' ${{needs.read.outputs.triggerFunctionName}}
          echo 'NotifierFunctionName is ' ${{needs.read.outputs.notifierFunctionName}}
          echo 'EventFunctionName is ' ${{needs.read.outputs.recorderFunctionName}}

      - name: Check Test param
        if: ${{ github.ref == 'refs/heads/test' }}
        run: |
          echo "ENV=test" >> $GITHUB_ENV
          echo "GCP_PROJECT=mcd-test" >> $GITHUB_ENV

      - name: Check Stg param
        if: ${{ github.ref == 'refs/heads/stg' }}
        run: |
          echo "ENV=stg" >> $GITHUB_ENV
          echo "GCP_PROJECT=mcd-stg" >> $GITHUB_ENV   
          
      - name: Check Main param
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          echo "ENV=main" >> $GITHUB_ENV
          echo "GCP_PROJECT=mcd-main" >> $GITHUB_ENV

      - name: Check Trigger FunctionType
        if: ${{ needs.read.outputs.functionType == 'trigger' }}
        run: |
          cd trigger
          pwd
          echo "workdir=trigger" >> $GITHUB_ENV
          echo "FunctionName=${{needs.read.outputs.triggerFunctionName}}" >> $GITHUB_ENV

      - name: Check Recorder FunctionType
        if: ${{ needs.read.outputs.functionType == 'recorder' }}
        run: |
          cd recorder
          pwd
          echo "workdir=recorder" >> $GITHUB_ENV
          echo "FunctionName=${{needs.read.outputs.recorderFunctionName}}" >> $GITHUB_ENV

      - name: Check Notifier FunctionType
        if: ${{ needs.read.outputs.functionType == 'notifier' }}
        run: |
          cd notifier
          pwd
          echo "workdir=notifier" >> $GITHUB_ENV
          echo "FunctionName=${{needs.read.outputs.notifierFunctionName}}" >> $GITHUB_ENV

      - name:  Echo Result
        run: |
          pwd
          echo ${{env.ENV}}
          echo ${{env.GCP_PROJECT}}
          echo ${{env.workdir}}
          echo ${{env.FunctionName}}
          echo ${{needs.read.outputs.EnvName}}

      - name: DeployParam All
        if: ${{env.FunctionName == 'all'}}
        run: |
          cd ${{env.ENV}}
          pwd
          echo Make_ALL
          sh hello.sh
          
      - name: DeployParam One
        if: ${{env.FunctionName != 'all' }}
        run: |
          cd ${{env.workdir}}
          pwd
          echo ${{env.FunctionName}}
          sh hello.sh
          
      - id: auth_test
        if: ${{ github.ref == 'refs/heads/test' }}
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCLOUD_TEST_CREDENTIALS }}

      - id: auth_stg
        if: ${{ github.ref == 'refs/heads/stg' }}
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCLOUD_STG_CREDENTIALS }}

      - id: auth_prod
        if: ${{ github.ref == 'refs/heads/main' }}
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCLOUD_PROD_CREDENTIALS }}

      - name: Display result
        run: |
          gcloud config set project enhanced-cable-365505;
          gcloud functions list
#          cd functions/test_latency
#          make deploy-dev
#          gcloud functions list
